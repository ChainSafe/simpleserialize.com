{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "defaultBranch": "master"
  },
  "extends": ["@chainsafe/biomejs-config", "@chainsafe/biomejs-config/recommended", "@chainsafe/biomejs-config/esm"],
  "files": {
    "include": ["src/**/*.tsx"]
  },
  "linter": {
    "rules": {
      "suspicious": {
        "noConsoleLog": "off"
      },
      "style": {
        // Our team does not like this syntax
        // https://github.com/ChainSafe/ssz/pull/475#discussion_r1995814916
        "useNumberNamespace": "off",
        // TODO: There are two many usages, will fix in separate PR
        "noParameterAssign": "off",
        // We use to export types and object without differentiating
        "useExportType": "off",
        // We use to import types and object without differentiating
        "useImportType": "off",
        // We have a lot of enum members in camelCase, so we have to update
        // the base naming convention to allow camelCase in addition to PascalCase
        "useNamingConvention": {
          "level": "error",
          "options": {
            "requireAscii": true,
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "enumMember"
                },
                "formats": ["camelCase", "PascalCase"]
              }
            ]
          }
        }
      }
    }
  },
  "overrides": [
    {
      "include": ["src/**/*.tsx"],
      "linter": {
        "rules": {
          // Disable all accessibility rules for React files
          "a11y": {
            "useValidAnchor": "off",
            "noLabelWithoutControl": "off",
            "useButtonType": "off",
            "useKeyWithClickEvents": "off",
            "useAnchorContent": "off",
            "useAltText": "off"
          }
        }
      },
      // Add JSX support for React files
      "javascript": {
        "globals": ["JSX"]
      }
    }
  ]
}
